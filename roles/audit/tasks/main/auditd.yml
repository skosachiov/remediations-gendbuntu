- name: Auditd Present deb @auditd_present
  ignore_errors: "{{ansible_check_mode}}"
  package:
    name: "{{'auditd' if ansible_os_family in var_debian_based_os else 'audit'}}"
    state: present
  tags:
    - ws
    - sec
    - mob
    - auditd_present

- name: Configure auditd max log file @auditd_max_log_file
  ignore_errors: "{{ansible_check_mode}}"
  block:
    - name: Configure auditd max_log_file @auditd_max_log_file
      lineinfile:
        dest: /etc/audit/auditd.conf
        line: max_log_file = 128
        regexp: ^\s*max_log_file\s*=\s*.*$
        state: present
        create: true
      notify: Auditd restarted
    - name: Configure auditd max_log_file_action @auditd_max_log_file
      lineinfile:
        dest: /etc/audit/auditd.conf
        line: max_log_file_action = ROTATE
        regexp: ^\s*max_log_file_action\s*=\s*.*$
        state: present
        create: true
      notify: Auditd restarted
    - name: Configure auditd num_logs @auditd_max_log_file
      lineinfile:
        dest: /etc/audit/auditd.conf
        line: num_logs = 5
        regexp: ^\s*num_logs\s*=\s*.*$
        state: present
        create: true
      notify: Auditd restarted
    - name: Configure auditd name_format @auditd_max_log_file
      lineinfile:
        dest: /etc/audit/auditd.conf
        line: name_format = hostname
        regexp: ^\s*name_format\s*=\s*.*$
        state: present
        create: true
      notify: Auditd restarted
  tags:
    - ws
    - sec
    - mob
    - auditd_max_log_file

- name: Configure audspd q_depth @audispd_conf_q_depth
  ignore_errors: "{{ansible_check_mode}}"
  block:
    - name: Configure audspd q_depth Change @audispd_conf_q_depth
      lineinfile:
        dest: /etc/audisp/audispd.conf
        line: q_depth = 512
        regexp: ^\s*q_depth
        state: present
        create: true
      notify: Auditd restarted
  tags:
    - ws
    - sec
    - audispd_conf_q_depth

- name: Set common auditd rules @common_auditd_exceptions
  ignore_errors: "{{ansible_check_mode}}"
  blockinfile:
    dest: /etc/audit/rules.d/audit.rules
    marker_begin: BEGIN_EXCEPTIONS
    marker_end: END_EXCEPTIONS
    insertafter: "^-f 1"
    block: |
      {{var_auditd_exceptions}}
  notify: Auditd restarted
  tags:
    - ws
    - sec
    - mob
    - common_auditd_exceptions

- name: Set common auditd rules @common_auditd_rules
  ignore_errors: "{{ansible_check_mode}}"
  template:
    src: "{{item}}"
    dest: '/etc/audit/rules.d/{{(item|basename).split(".")[0]}}.rules'
    mode: '0640'
  with_fileglob:
    - "{{playbook_dir}}/roles/audit/templates/*"
  notify: Auditd restarted
  tags:
    - ws
    - sec
    - mob
    - common_auditd_rules

- name: Audit rules increase buffer @audit_rules_increase_buffer
  ignore_errors: "{{ansible_check_mode}}"
  block:
    - name: Audit rules increase buffer @audit_rules_increase_buffer
      lineinfile:
        path: /etc/audit/rules.d/audit.rules
        regexp: ^\s*-b\s*
        line: -b 32768
        state: present
      notify: Auditd restarted
  tags:
    - ws
    - sec
    - audit_rules_increase_buffer

- name: Audit rules immutable @audit_rules_immutable
  ignore_errors: "{{ansible_check_mode}}"
  block:
    - name: Collect all files from /etc/audit/rules.d with .rules extension @audit_rules_immutable
      find:
        paths: /etc/audit/rules.d/
        patterns: '*.rules'
      register: find_rules_d
    - name: Remove the -e option from all Audit config files @audit_rules_immutable
      lineinfile:
        path: '{{ item }}'
        regexp: ^\s*(?:-e)\s+.*$
        state: absent
      loop: '{{ find_rules_d.files | map(attribute=''path'') | list + [''/etc/audit/audit.rules''] }}'
      when:
        - item != '/etc/audit/audit.rules'
        - item != '/etc/audit/rules.d/audit.rules'
        - item != '/etc/audit/rules.d/immutable.rules'
    - name: Add Audit -e option into /etc/audit/rules.d/immutable.rules and /etc/audit/audit.rules @audit_rules_immutable
      lineinfile:
        path: '{{ item }}'
        create: true
        regexp: ^\s*-e\s*[0-9]
        line: -e 2
        insertafter: EOF
      loop:
        - /etc/audit/rules.d/audit.rules
        - /etc/audit/rules.d/immutable.rules
      notify: Auditd restarted
  tags:
    - ws
    - sec
    - audit_rules_immutable

- name: Configure auditd space_left Action on Low Disk Space @auditd_data_retention_space_left_action
  ignore_errors: "{{ansible_check_mode}}"
  lineinfile:
    dest: /etc/audit/auditd.conf
    # line: space_left_action = halt
    line: space_left_action = syslog
    regexp: ^\s*space_left_action\s*=\s*.*$
    state: present
    create: true
  tags:
    - ws
    - sec
    - mob
    - auditd_data_retention_space_left_action

- name: Enable auditd syslog plugin @auditd_audispd_syslog_plugin_activated
  ignore_errors: "{{ansible_check_mode}}"
  lineinfile:
    dest: /etc/audisp/plugins.d/syslog.conf
    regexp: ^active
    line: active = yes
    create: true
  tags:
    - ws
    - sec
    - auditd_audispd_syslog_plugin_activated

- name: Auditd rules count @auditd_rules_count
  ignore_errors: "{{ansible_check_mode}}"
  block:
    - name: Auditd rules count Get @auditd_rules_count
      command: auditctl -l
      changed_when: false
      check_mode: no
      register: items
    - name: Auditd rules count Compare @auditd_rules_count
      changed_when: true
      debug:
        msg: "Auditd rules count is less than the norm"
      when: items.stdout_lines|length < var_auditd_rules_count|int
  tags:
    - ws
    - sec
    - auditd_rules_count

# Changes required for auditd.conf (by default it rotates files on its
# own which is not what we're looking for):

# max_log_file             =  0
# max_log_file_action      =  ignore

# An example logrotate file, e.g. /etc/logrotate.d/audit

# /var/log/audit/*.log {
#         weekly
#         missingok
#         compress
#         #copytruncate
#         rotate 30
#         minsize 100k
#         maxsize 200M
#         postrotate
#                 touch /var/log/audit/audit.log ||:
#                 chmod 0600 /var/log/audit/audit.log ||:
#                 service auditd restart
#         endscript
# }
