- name: Install client dependencies @ra_install_client_dependencies
  ignore_errors: "{{ansible_check_mode}}"
  block:
    - name: Install client dependencies x11 @ra_install_client_dependencies
      package:
        name:
          - x11vnc
          - zenity
          - sshpass
        state: present
    - name: Install client dependencies Tigervnc rpm @ra_install_client_dependencies
      package:
        name:
          - tigervnc
          - tigervnc-server-minimal
        state: present
      when: ansible_os_family in ['RedHat', 'Rocky', 'RED']
    - name: Install client dependencies Tigervnc deb @ra_install_client_dependencies
      package:
        name:
          - tigervnc-viewer
          - tigervnc-common
        state: present
      when: ansible_os_family in ['Debian']
    - name: Install client dependencies Tigervnc tools deb @ra_install_client_dependencies
      package:
        name:
          - tigervnc-tools
        state: present
      when: ansible_distribution == 'Ubuntu' and ansible_distribution_major_version|int == 22
  tags:
    - ws
    - ra_install_client_dependencies

- name: Wayland disable @wayland_disable
  ignore_errors: "{{ansible_check_mode}}"
  failed_when: false
  replace:
    dest: /etc/gdm3/custom.conf
    regexp: ^#?(WaylandEnable).*
    replace: '\1=false'
  when: ansible_distribution_major_version|int > 7
  tags:
    - ws
    - wayland_disable

- name: Init known hosts @ra_init_known_hosts
  ignore_errors: "{{ansible_check_mode}}"
  block:
    - name: Init known hosts Shell @ra_init_known_hosts
      shell: sshpass -p '{{var_no_shell_pass}}' ssh -o StrictHostKeyChecking=no no-shell@{{var_fqdn_sshserver}} "/bin/false"
      failed_when: false
      changed_when: false
    - name: Init known hosts Copy @ra_init_known_hosts
      changed_when: false
      copy:
        src: ~/.ssh/known_hosts
        dest: /etc/ssh/known_hosts
        remote_src: yes
      ignore_errors: yes
  tags:
    - ws
    - ra_init_known_hosts

- name: Install client desktop files @ra_install_client_desktop_files
  ignore_errors: "{{ansible_check_mode}}"
  block:
    - name: Install client desktop files Full control @ra_install_client_desktop_files
      set_fact:
        var_view_only: ""
    - name: Install client desktop files Full control @ra_install_client_desktop_files
      copy:
        mode: u=rw,g=r,o=r
        dest: /usr/share/applications/remote-assistance-full-control.desktop
        content: |
          [Desktop Entry]
          Type=Application
          Name=RA Full control
          Comment=Remote Assistance Full control
          Exec=/bin/bash -c '{{var_remote_assistance_exec}}'
          Icon=audio-headset
          StartupNotify=false
    - name: Install client desktop files View only @ra_install_client_desktop_files
      set_fact:
        var_view_only: "--viewonly"
    - name: Install client desktop files View only @ra_install_client_desktop_files
      copy:
        mode: u=rw,g=r,o=r
        dest: /usr/share/applications/remote-assistance-view-only.desktop
        content: |
          [Desktop Entry]
          Type=Application
          Name=RA View only
          Comment=Remote Assistance View only
          Exec=/bin/bash -c '{{var_remote_assistance_exec}}'
          Icon=audio-headset
          StartupNotify=false
    - name: Install client desktop files Helpdesk @ra_install_client_desktop_files
      copy:
        mode: u=rw,g=r,o=r
        dest: /usr/share/applications/remote-assistance-helpdesk.desktop
        content: |
          [Desktop Entry]
          Type=Application
          Name=RA Helpdesk
          Comment=Remote Assistance Helpdesk
          Exec=/bin/bash -c '{{var_helpdesk_exec}}'
          Icon=preferences-system-network
          StartupNotify=false
  tags:
    - ws
    - ra_install_client_desktop_files
