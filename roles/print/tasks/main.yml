- name: Enable service cupsd deb @service_cups_enabled
  ignore_errors: "{{ansible_check_mode}}"
  block:
    - name: Enable service cupsd facts @service_cups_enabled
      package_facts:
        manager: auto
    - name: Enable service cupsd Present @service_cups_enabled
      package:
        name: >-
          {{ ['cups', 'printer-driver-gutenprint', 'smbclient']
          if ansible_pkg_mgr == 'apt'
          else ['cups', 'gutenprint', 'samba-client', 'samba-krb5-printing'] }}
        state: present
    - name: Enable service cupsd Started @service_cups_enabled
      service:
        name: cups
        enabled: yes
        state: started
      when:
        - '"cups" in ansible_facts.packages'
  tags:
    - ws
    - service_cups_enabled

- name: CUPS smb backend set @cups_smb_backend_set
  ignore_errors: "{{ansible_check_mode}}"
  block:
    - name: CUPS smb backend set Check @cups_smb_backend_set
      stat:
        path: /usr/lib/cups/backend/smb
      register: result
    - name: CUPS smb backend set Backup @cups_smb_backend_set
      command: mv /usr/lib/cups/backend/smb /usr/lib/cups/backend/smb.orig
      when: not (result.stat.islnk is defined and result.stat.islnk)
    - name: CUPS smb backend Link @cups_smb_backend_set
      file:
        src: >-
          {{'/usr/lib/x86_64-linux-gnu/samba/smbspool_krb5_wrapper' if ansible_pkg_mgr == 'apt'
          else '/usr/libexec/samba/smbspool_krb5_wrapper'}}
        dest: /usr/lib/cups/backend/smb
        state: link
  tags:
    - ws
    - cups_smb_backend_set

- name: CUPS printers @cups_printers
  ignore_errors: "{{ansible_check_mode}}"
  block:
    - name: CUPS printer Grep @cups_printers
      shell: "cupsctl | grep DefaultAuthType=Negotiate"
      failed_when: false
      check_mode: no
      register: result
      changed_when: false
    - name: CUPS printer Set auth @cups_printers
      command: cupsctl DefaultAuthType=Negotiate
      when: result.stdout_lines|length != 1
    - name: CUPS default printer Restart service @cups_printers
      service:
          name: cups
          state: restarted
      when: result.stdout_lines|length != 1
    - name: CUPS printer Check @cups_printers
      shell: "LANG=C.UTF-8 lpstat -v | awk '{print $4}'"
      failed_when: false
      check_mode: no
      register: result
      changed_when: false
    - name: CUPS printer Diff @cups_printers
      set_fact:
        diff_cups_printers: "{{ (var_cups_printers | map(attribute='uri') | list) | difference(result.stdout_lines)}}"
      changed_when: false
      when: var_cups_printers|length > 0
    - name: CUPS printer Group @cups_printers
      user:
        name: "{{var_ansible_username}}"
        groups: "{{'lpadmin' if ansible_pkg_mgr == 'apt' else 'lp'}}"
    - name: CUPS printer Generic printer @cups_printers
      failed_when: false
      become: true
      become_user: "{{var_ansible_username}}"
      command: >
        lpadmin -p {{item.uri | basename}} -E -v {{item.uri}}
        {{ '-o auth-info-required=negotiate' if item.auth == 'negotiate' else '' }}
        -m {{item.model}}
      with_items: "{{var_cups_printers}}"
      register: service_conf
      notify: Cups restarted
      when: diff_cups_printers|length > 0 and var_cups_printers|length > 0
    - name: CUPS printer Default @cups_printers
      failed_when: false
      become: true
      become_user: "{{var_ansible_username}}"
      command: lpadmin -d {{var_cups_printers[0].uri | basename}}
      when: service_conf.changed
  tags:
    - ws
    - cups_printers
