- name: Ansible devel workstation @ansible_devel_workstation
  set_fact:
    var_ansible_repo: "{{var_ansible_devel_repo}}"
    var_ansible_git: "https://{{var_ansible_fqdn}}/git/{{var_ansible_devel_repo}}"
  when: var_devel_workstation
  tags:
    - ws
    - ansible_devel_workstation

- name: Cron ansible pull @cron_ansible_pull
  ignore_errors: "{{ansible_check_mode}}"
  block:
    - name: Cron ansible pull Package present @cron_ansible_pull
      package:
        name: ansible
        state: present
    - name: Cron ansible pull Copy file @cron_ansible_pull
      copy:
        dest: /etc/cron.d/ansible-pull
        content: |
          {{var_ansible_daily_exec_time}} * * * root sleep $((RANDOM \% 1200)); bash -c "/usr/bin/ansible-pull -i localhost -d /root/.ansible/pull/{{var_ansible_repo}} -U {{var_ansible_git}} {{var_ansible_playbook}}| logger -n {{var_rsyslog_server}}"
          {{var_ansible_nightly_exec_time}} * * * root sleep $((RANDOM \% 1200)); bash -c "/usr/bin/ansible-pull -i localhost -d /root/.ansible/pull/{{var_ansible_repo}} -U {{var_ansible_git}} {{var_ansible_playbook}}| logger -n {{var_rsyslog_server}}"
          {{var_ansible_hourly_exec_time}} * * * * root sleep $((RANDOM \% 1200)); bash -c "/usr/bin/ansible-pull -o -i localhost -d /root/.ansible/pull/{{var_ansible_repo}} -U {{var_ansible_git}} {{var_ansible_playbook}}| logger -n {{var_rsyslog_server}}"
          # EOF
      notify: Cron restarted
  tags:
    - ws
    - cron_ansible_pull

- name: Cron ansible pull repair @cron_ansible_pull_repair
  copy:
    dest: /etc/cron.d/ansible-pull-repair
    content: |
      30 04 * * * root find /root/.ansible/pull/* -maxdepth 0 -type d -exec bash -c "if ! git -C {} diff --exit-code; then rm -f -r {}; fi" \;
      31 04 * * * root find /root/.ansible/pull/ -maxdepth 3 -type f -name HEAD -mtime +7 -exec bash -c "echo {} | cut -f 5 -d / | xargs -I {} rm -f -r /root/.ansible/pull/{}" \;
      # EOF
  notify: Cron restarted
  tags:
    - ws
    - cron_ansible_pull_repair

- name: Cron periodic ansible pull @cron_periodic_ansible_pull
  copy:
    dest: /etc/cron.{{item}}/ansible-pull-{{item}}
    content: >
      sleep $((RANDOM % 1800));
      bash -c "/usr/bin/ansible-pull -i localhost -d /root/.ansible/pull/{{var_ansible_repo}} -U {{var_ansible_git}} workstation-cron-{{item}}.yml |
      logger -n {{var_rsyslog_server}}"
    mode: a+rx
  notify: Cron restarted
  with_items:
    - hourly
    - daily
    - weekly
    - monthly
  when: var_devel_workstation
  tags:
    - ws
    - cron_periodic_ansible_pull